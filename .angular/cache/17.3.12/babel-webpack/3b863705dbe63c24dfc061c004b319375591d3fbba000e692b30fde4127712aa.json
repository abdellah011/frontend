{"ast":null,"code":"import { UserServiceTsService } from 'app/shared/user/user.service.ts.service';\nimport { AddUserDialogComponent } from 'app/components/add-user-dialog/add-user-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserStoreService } from 'app/services/userStore/user-store.service';\nimport { AuthService } from 'app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/shared/user/user.service.ts.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"app/services/userStore/user-store.service\";\nimport * as i4 from \"app/services/auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction TableComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TableComponent_tr_23_Template_button_click_14_listener() {\n      const user_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editUser(user_r2));\n    });\n    i0.ɵɵelement(15, \"i\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TableComponent_tr_23_Template_button_click_16_listener() {\n      const user_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser(user_r2.id));\n    });\n    i0.ɵɵelement(17, \"i\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.department);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.role);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.password);\n  }\n}\nexport let TableComponent = /*#__PURE__*/(() => {\n  class TableComponent {\n    constructor(userServiceTsService, dialog, userStore, auth) {\n      this.userServiceTsService = userServiceTsService;\n      this.dialog = dialog;\n      this.userStore = userStore;\n      this.auth = auth;\n      this.users = [];\n      this.isEditing = false;\n      this.selectedUser = null;\n    }\n    ngOnInit() {\n      this.loadUsers();\n    }\n    // Load all users from API\n    loadUsers() {\n      this.userServiceTsService.getUsers().subscribe({\n        next: data => {\n          this.users = data;\n          console.log(\"Utilisateurs récupérés :\", data);\n        },\n        error: err => {\n          console.error('Error fetching users:', err);\n        }\n      });\n    }\n    // ✅ Open Add User Dialog\n    addUser() {\n      const dialogRef = this.dialog.open(AddUserDialogComponent, {\n        width: '400px',\n        autoFocus: true,\n        // ✅ Automatically focus dialog content\n        disableClose: false // Allows closing on clicking outside (optional)\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.userServiceTsService.addUser(result).subscribe(() => this.loadUsers());\n        }\n      });\n    }\n    // ✅ Edit User\n    editUser(user) {\n      this.selectedUser = {\n        ...user\n      };\n      this.isEditing = true;\n    }\n    updateUser() {\n      if (this.selectedUser) {\n        this.userServiceTsService.updateUser(this.selectedUser).subscribe({\n          next: () => {\n            this.loadUsers(); // Refresh table\n            this.cancelEdit(); // Exit edit mode\n          },\n          error: err => {\n            console.error('Error updating user:', err);\n          }\n        });\n      }\n    }\n    // ✅ Delete User\n    deleteUser(id) {\n      this.userServiceTsService.deleteUser(id).subscribe(() => this.loadUsers());\n    }\n    // ✅ Cancel Edit\n    cancelEdit() {\n      this.isEditing = false;\n      this.selectedUser = null;\n    }\n    static #_ = this.ɵfac = function TableComponent_Factory(t) {\n      return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.UserServiceTsService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.UserStoreService), i0.ɵɵdirectiveInject(i4.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TableComponent,\n      selectors: [[\"app-table\"]],\n      decls: 24,\n      vars: 2,\n      consts: [[1, \"search-container\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Entrez l'ID\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"table\"], [1, \"text-primary\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"fa-solid\", \"fa-user-pen\"], [1, \"fa-solid\", \"fa-trash\"]],\n      template: function TableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n          i0.ɵɵtext(3, \"Rechercher par ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TableComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.searchId, $event) || (ctx.searchId = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"input\", function TableComponent_Template_input_input_4_listener() {\n            return ctx.filterUsers();\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(5, \"table\", 3)(6, \"thead\", 4)(7, \"tr\")(8, \"th\");\n          i0.ɵɵtext(9, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"th\");\n          i0.ɵɵtext(13, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"th\");\n          i0.ɵɵtext(15, \"D\\u00E9partement\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"th\");\n          i0.ɵɵtext(17, \"R\\u00F4le\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"th\");\n          i0.ɵɵtext(19, \"Mot de Passe\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\");\n          i0.ɵɵtext(21, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"tbody\");\n          i0.ɵɵtemplate(23, TableComponent_tr_23_Template, 18, 6, \"tr\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.searchId);\n          i0.ɵɵadvance(19);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredUsers);\n        }\n      },\n      dependencies: [i5.NgForOf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel],\n      encapsulation: 2\n    });\n  }\n  return TableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}