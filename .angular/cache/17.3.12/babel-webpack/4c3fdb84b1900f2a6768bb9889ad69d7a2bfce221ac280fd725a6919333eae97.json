{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { UserServiceTsService } from 'app/shared/user/user.service.ts.service';\nimport { MatDialog } from '@angular/material/dialog';\nlet TableComponent = class TableComponent {\n  constructor(userServiceTsService, dialog) {\n    this.userServiceTsService = userServiceTsService;\n    this.dialog = dialog;\n    this.displayedColumns = ['id', 'name', 'email', 'department', 'role', 'actions'];\n    this.dataSource = new MatTableDataSource([]);\n    this.searchId = '';\n  }\n  ngOnInit() {\n    this.loadUsers();\n  }\n  loadUsers() {\n    this.userServiceTsService.getUsers().subscribe({\n      next: data => {\n        this.dataSource = new MatTableDataSource(data);\n        this.dataSource.paginator = this.paginator; // Associer le paginator après chargement des données\n      },\n      error: err => {\n        console.error('Erreur lors de la récupération des utilisateurs:', err);\n      }\n    });\n  }\n  // ✅ Filtrer les utilisateurs par ID\n  applyFilter() {\n    this.dataSource.filter = this.searchId.trim().toLowerCase();\n  }\n  addUser() {\n    // Ajout d'utilisateur via un dialogue (existant dans votre code)\n  }\n  editUser(user) {\n    // Fonction pour éditer un utilisateur\n  }\n  deleteUser(id) {\n    this.userServiceTsService.deleteUser(id).subscribe(() => this.loadUsers());\n  }\n};\n__decorate([ViewChild(MatPaginator), __metadata(\"design:type\", MatPaginator)], TableComponent.prototype, \"paginator\", void 0);\nTableComponent = __decorate([Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html'\n}), __metadata(\"design:paramtypes\", [UserServiceTsService, MatDialog])], TableComponent);\nexport { TableComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}