{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, Renderer2, ViewChild, ElementRef } from '@angular/core';\nimport { ROUTES } from '../../sidebar/sidebar.component';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthService } from 'app/services/auth.service';\nimport { UserStoreService } from 'app/services/userStore/user-store.service';\nimport Swal from 'sweetalert2';\nlet NavbarComponent = class NavbarComponent {\n  constructor(location, renderer, userStore, element, router, auth) {\n    this.renderer = renderer;\n    this.userStore = userStore;\n    this.element = element;\n    this.router = router;\n    this.auth = auth;\n    this.fullName = \"\";\n    this.isCollapsed = true;\n    this.location = location;\n    this.nativeElement = element.nativeElement;\n    this.sidebarVisible = false;\n  }\n  ngOnInit() {\n    this.listTitles = ROUTES.filter(listTitle => listTitle);\n    let navbar = this.element.nativeElement;\n    this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n    this.router.events.subscribe(() => {\n      this.sidebarClose();\n    });\n    // ✅ Récupérer le nom de l'utilisateur depuis le token\n    this.auth.getFullNameFromToken().subscribe(val => {\n      let getFullNameFromToken = this.auth.getFullNameFromToken();\n      this.fullName = val || getFullNameFromToken;\n    });\n  }\n  getTitle() {\n    let titlee = this.location.prepareExternalUrl(this.location.path());\n    if (titlee.charAt(0) === '#') {\n      titlee = titlee.slice(1);\n    }\n    for (let item = 0; item < this.listTitles.length; item++) {\n      if (this.listTitles[item].path === titlee) {\n        return this.listTitles[item].title;\n      }\n    }\n    return 'Dashboard';\n  }\n  sidebarToggle() {\n    if (this.sidebarVisible === false) {\n      this.sidebarOpen();\n    } else {\n      this.sidebarClose();\n    }\n  }\n  sidebarOpen() {\n    if (!this.toggleButton) return;\n    const toggleButton = this.toggleButton;\n    const html = document.getElementsByTagName('html')[0];\n    const mainPanel = document.getElementsByClassName('main-panel')[0];\n    setTimeout(() => {\n      toggleButton.classList.add('toggled');\n    }, 500);\n    html.classList.add('nav-open');\n    if (window.innerWidth < 991) {\n      mainPanel.style.position = 'fixed';\n    }\n    this.sidebarVisible = true;\n  }\n  sidebarClose() {\n    const html = document.getElementsByTagName('html')[0];\n    const mainPanel = document.getElementsByClassName('main-panel')[0];\n    if (window.innerWidth < 991) {\n      setTimeout(() => {\n        mainPanel.style.position = '';\n      }, 500);\n    }\n    if (this.toggleButton) {\n      this.toggleButton.classList.remove('toggled');\n    }\n    this.sidebarVisible = false;\n    html.classList.remove('nav-open');\n  }\n  // ✅ Ajout d'un popup SweetAlert2 pour confirmer la déconnexion\n  logOut() {\n    Swal.fire({\n      title: \"Déconnexion\",\n      text: \"Êtes-vous sûr de vouloir vous déconnecter ?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#d33\",\n      cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"Oui, me déconnecter\",\n      cancelButtonText: \"Annuler\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.auth.signOut();\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n};\n__decorate([ViewChild(\"navbar-cmp\", {\n  static: false\n}), __metadata(\"design:type\", Object)], NavbarComponent.prototype, \"button\", void 0);\nNavbarComponent = __decorate([Component({\n  selector: 'navbar-cmp',\n  templateUrl: 'navbar.component.html'\n}), __metadata(\"design:paramtypes\", [Location, Renderer2, UserStoreService, ElementRef, Router, AuthService])], NavbarComponent);\nexport { NavbarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}