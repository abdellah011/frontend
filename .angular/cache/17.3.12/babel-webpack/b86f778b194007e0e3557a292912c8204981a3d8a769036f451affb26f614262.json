{"ast":null,"code":"import { Renderer2, ElementRef } from '@angular/core';\nimport { ROUTES } from '../../sidebar/sidebar.component';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthService } from 'app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"app/services/auth.service\";\nconst _c0 = [\"navbar-cmp\"];\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(location, renderer, element, router, auth) {\n      this.renderer = renderer;\n      this.element = element;\n      this.router = router;\n      this.auth = auth;\n      this.isCollapsed = true;\n      this.location = location;\n      this.nativeElement = element.nativeElement;\n      this.sidebarVisible = false;\n    }\n    ngOnInit() {\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      var navbar = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n      this.router.events.subscribe(event => {\n        this.sidebarClose();\n      });\n    }\n    getTitle() {\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      if (titlee.charAt(0) === '#') {\n        titlee = titlee.slice(1);\n      }\n      for (var item = 0; item < this.listTitles.length; item++) {\n        if (this.listTitles[item].path === titlee) {\n          return this.listTitles[item].title;\n        }\n      }\n      return 'Dashboard';\n    }\n    sidebarToggle() {\n      if (this.sidebarVisible === false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n    }\n    sidebarOpen() {\n      const toggleButton = this.toggleButton;\n      const html = document.getElementsByTagName('html')[0];\n      const mainPanel = document.getElementsByClassName('main-panel')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      html.classList.add('nav-open');\n      if (window.innerWidth < 991) {\n        mainPanel.style.position = 'fixed';\n      }\n      this.sidebarVisible = true;\n    }\n    sidebarClose() {\n      const html = document.getElementsByTagName('html')[0];\n      const mainPanel = document.getElementsByClassName('main-panel')[0];\n      if (window.innerWidth < 991) {\n        setTimeout(function () {\n          mainPanel.style.position = '';\n        }, 500);\n      }\n      this.toggleButton.classList.remove('toggled');\n      this.sidebarVisible = false;\n      html.classList.remove('nav-open');\n    }\n    collapse() {\n      this.isCollapsed = !this.isCollapsed;\n      const navbar = document.getElementsByTagName('nav')[0];\n      console.log(navbar);\n      if (!this.isCollapsed) {\n        navbar.classList.remove('navbar-transparent');\n        navbar.classList.add('bg-white');\n      } else {\n        navbar.classList.add('navbar-transparent');\n        navbar.classList.remove('bg-white');\n      }\n    }\n    logOut() {\n      this.auth.signOut();\n    }\n    static #_ = this.ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"navbar-cmp\"]],\n      viewQuery: function NavbarComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        }\n      },\n      decls: 14,\n      vars: 0,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", \"fixed-top\", \"navbar-transparent\"], [1, \"container-fluid\"], [1, \"mr-auto\"], [1, \"input-group\", \"no-border\"], [\"type\", \"text\", \"placeholder\", \"Search...\", 1, \"form-control\"], [1, \"input-group-append\"], [1, \"input-group-text\"], [1, \"nc-icon\", \"nc-zoom-split\"], [1, \"navbar-nav\", \"ml-auto\"], [1, \"nav-item\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3);\n          i0.ɵɵelement(4, \"input\", 4);\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6);\n          i0.ɵɵelement(7, \"i\", 7);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(8, \"ul\", 8)(9, \"li\", 9)(10, \"h3\");\n          i0.ɵɵtext(11, \"sdgdfd\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_12_listener() {\n            return ctx.logOut();\n          });\n          i0.ɵɵtext(13, \"LogOut\");\n          i0.ɵɵelementEnd()()()()();\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}