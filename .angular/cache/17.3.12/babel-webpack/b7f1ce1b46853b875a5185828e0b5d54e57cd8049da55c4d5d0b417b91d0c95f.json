{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserServiceTsService } from 'app/shared/user/user.service.ts.service';\nimport { AddUserDialogComponent } from 'app/components/add-user-dialog/add-user-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nlet TableComponent = class TableComponent {\n  constructor(userServiceTsService, dialog, pri, userStore) {\n    this.userServiceTsService = userServiceTsService;\n    this.dialog = dialog;\n    this.users = [];\n    this.isEditing = false;\n    this.selectedUser = null;\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.userStore.getRole().subscribe(val => {\n      let roleFromeToken = this.auth.getRoleFromToken();\n      this.role = val || roleFromeToken;\n    });\n  }\n  // Load all users from API\n  loadUsers() {\n    this.userServiceTsService.getUsers().subscribe({\n      next: data => {\n        this.users = data;\n      },\n      error: err => {\n        console.error('Error fetching users:', err);\n      }\n    });\n  }\n  // ✅ Open Add User Dialog\n  addUser() {\n    const dialogRef = this.dialog.open(AddUserDialogComponent, {\n      width: '400px',\n      autoFocus: true,\n      // ✅ Automatically focus dialog content\n      disableClose: false // Allows closing on clicking outside (optional)\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.userServiceTsService.addUser(result).subscribe(() => this.loadUsers());\n      }\n    });\n  }\n  // ✅ Edit User\n  editUser(user) {\n    this.selectedUser = {\n      ...user\n    };\n    this.isEditing = true;\n  }\n  updateUser() {\n    if (this.selectedUser) {\n      this.userServiceTsService.updateUser(this.selectedUser).subscribe({\n        next: () => {\n          this.loadUsers(); // Refresh table\n          this.cancelEdit(); // Exit edit mode\n        },\n        error: err => {\n          console.error('Error updating user:', err);\n        }\n      });\n    }\n  }\n  // ✅ Delete User\n  deleteUser(id) {\n    this.userServiceTsService.deleteUser(id).subscribe(() => this.loadUsers());\n  }\n  // ✅ Cancel Edit\n  cancelEdit() {\n    this.isEditing = false;\n    this.selectedUser = null;\n  }\n};\nTableComponent = __decorate([Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html'\n}), __metadata(\"design:paramtypes\", [UserServiceTsService, MatDialog, Object, typeof (_a = typeof user !== \"undefined\" && user) === \"function\" ? _a : Object])], TableComponent);\nexport { TableComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}