{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'app/services/auth.service';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, auth, router, pr) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      name: ['', [Validators.required]],\n      Password: ['', [Validators.required]] // âœ… Ajout de minLength(6)\n\n    });\n  }\n\n  onlogin() {\n    if (this.loginForm.valid) {\n      this.auth.login(this.loginForm.value).subscribe({\n        next: res => {\n          alert(res.message);\n          this.router.navigate(['../../pages/dashboard']);\n        },\n        error: err => {\n          alert(err?.error.message);\n        }\n      });\n    } else {\n      console.log('Formulaire non valide ');\n      this.validateFormFields(this.loginForm);\n      alert(\"Le Formulaire n'est pas valide\");\n    }\n  }\n\n  validateFormFields(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateFormFields(control);\n      }\n    });\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n}), __metadata(\"design:paramtypes\", [FormBuilder, AuthService, Router, Object])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module"}