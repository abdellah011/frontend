{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\n\n\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n/** @type {import('.')} */\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n  // eslint-disable-next-line no-extra-parens\n  var intrinsic =\n  /** @type {Parameters<typeof callBindBasic>[0][0]} */\n  GetIntrinsic(name, !!allowMissing);\n\n  if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n    return callBindBasic([intrinsic]);\n  }\n\n  return intrinsic;\n};","map":null,"metadata":{},"sourceType":"script"}