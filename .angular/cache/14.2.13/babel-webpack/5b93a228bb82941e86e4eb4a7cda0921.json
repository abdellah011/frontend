{"ast":null,"code":"var _a;\n\nimport { __decorate, __metadata, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserService } from '../..user.service.ts.service'; // ✅ Import du service utilisateur\n\nimport { User } from 'app/shared/user/user.model';\nlet AddUserDialogComponent = class AddUserDialogComponent {\n  constructor(dialogRef, data, userService // ✅ Injecter UserService\n  ) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.userService = userService;\n    this.user = new User(0, '', '', '', '');\n    this.isLoading = false; // ✅ Ajout d'un indicateur de chargement\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  saveUser() {\n    if (!this.user.name.trim() || !this.user.email.trim()) {\n      alert('Le nom et l\\'email sont obligatoires.');\n      return;\n    } // ✅ Empêcher plusieurs requêtes simultanées\n\n\n    if (this.isLoading) return;\n    this.isLoading = true; // ✅ Vérifier si l'utilisateur existe avant de l'ajouter\n\n    this.userService.checkUserExists(this.user.email).subscribe({\n      next: exists => {\n        this.isLoading = false;\n\n        if (exists) {\n          alert('⚠️ L\\'utilisateur existe déjà !'); // ✅ Affiche une alerte si l'utilisateur existe\n        } else {\n          console.log('Saving user:', this.user);\n          this.dialogRef.close(this.user); // ✅ Fermer le dialogue uniquement si l'utilisateur n'existe pas\n        }\n      },\n      error: err => {\n        this.isLoading = false;\n        console.error('Erreur lors de la vérification de l\\'utilisateur:', err);\n        alert('❌ Erreur lors de la vérification de l\\'utilisateur.');\n      }\n    });\n  }\n\n};\nAddUserDialogComponent = __decorate([Component({\n  selector: 'app-add-user-dialog',\n  templateUrl: './add-user-dialog.component.html',\n  styleUrls: ['./add-user-dialog.component.css']\n}), __param(1, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [MatDialogRef, Object, typeof (_a = typeof UserService // ✅ Injecter UserService\n!== \"undefined\" && UserService // ✅ Injecter UserService\n) === \"function\" ? _a : Object])], AddUserDialogComponent);\nexport { AddUserDialogComponent };","map":null,"metadata":{},"sourceType":"module"}