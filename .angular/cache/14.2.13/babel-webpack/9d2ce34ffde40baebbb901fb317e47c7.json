{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserServiceTsService = /*#__PURE__*/(() => {\n  class UserServiceTsService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiBaseUrl}/Users`; // ✅ Correct base URL\n    } // ✅ GET all users\n\n\n    getUsers() {\n      return this.http.get(this.apiUrl);\n    } // ✅ Add user with error handling\n\n\n    addUser(user) {\n      console.log('Sending user:', user);\n      return this.http.post(this.apiUrl, user).pipe(catchError(this.handleError) // ✅ Gérer les erreurs\n      );\n    } // ✅ DELETE a user by ID\n\n\n    deleteUser(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    } // ✅ Update user\n\n\n    updateUser(user) {\n      return this.http.put(`${this.apiUrl}/${user.id}`, user, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } // ✅ Gestion des erreurs\n\n\n    handleError(error) {\n      if (error.error && error.error.Message) {\n        return throwError(error.error.Message); // Renvoie le message d'erreur du backend\n      } else {\n        return throwError(\"Une erreur s'est produite. Veuillez réessayer.\");\n      }\n    }\n\n  }\n\n  UserServiceTsService.ɵfac = function UserServiceTsService_Factory(t) {\n    return new (t || UserServiceTsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserServiceTsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserServiceTsService,\n    factory: UserServiceTsService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserServiceTsService;\n})();","map":null,"metadata":{},"sourceType":"module"}